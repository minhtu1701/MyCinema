[{"C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\reportWebVitals.js":"1","C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\App.js":"2","C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\Routes.js":"3","C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\index.js":"4","C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\Components\\SelectBar\\SearchBar.js":"5","C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\Components\\Banner\\Banner.js":"6","C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\Components\\Header\\Header.js":"7","C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\Components\\MovieCard\\MovieCard.js":"8","C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\Components\\MovieCard\\Trailer.js":"9","C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\Components\\MovieList\\MovieList.js":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":1032,"mtime":1607159306008,"results":"13","hashOfConfig":"12"},{"size":407,"mtime":1607098457449,"results":"14","hashOfConfig":"12"},{"size":550,"mtime":1607159346269,"results":"15","hashOfConfig":"12"},{"size":3944,"mtime":1607159477689,"results":"16","hashOfConfig":"12"},{"size":3874,"mtime":1607159215505,"results":"17","hashOfConfig":"12"},{"size":938,"mtime":1607159641831,"results":"18","hashOfConfig":"12"},{"size":2440,"mtime":1607159328541,"results":"19","hashOfConfig":"12"},{"size":1050,"mtime":1607159275398,"results":"20","hashOfConfig":"12"},{"size":668,"mtime":1607159529003,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"21ea5g",{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\reportWebVitals.js",[],"C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\App.js",["46"],"import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Banner from './Components/Banner/Banner.js';\nimport Header from './Components/Header/Header';\nimport MovieList from './Components/MovieList/MovieList';\nimport SearchBar from './Components/SelectBar/SearchBar';\n\nlet apikey = 'c01e341b9cd7af286fd2ad88c67a609e';\n\nfunction App() {\n  let [movieList, setMovieList] = useState([]);\n  let type = 'top_rated';\n  let [page, setPage] = useState(1);\n  let [genreList, setGenreList] = useState([]);\n\n  const getGenre = async () => {\n    let url = `https://api.themoviedb.org/3/genre/movie/list?api_key=${apikey}&language=en-US`;\n    let response = await fetch(url);\n    let data = await response.json();\n    setGenreList(data.genres);\n  };\n\n  useEffect(() => {\n    getGenre();\n  }, [type, page]);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <Banner />\n      <SearchBar setMovieList={setMovieList} />\n      <MovieList list={movieList} genreList={genreList} />\n    </div>\n  );\n}\n\nexport default App;\n",["47","48"],"C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\Routes.js",[],"C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\index.js",[],"C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\Components\\SelectBar\\SearchBar.js",["49"],"import React, { useState, useEffect } from 'react';\r\nimport '../SelectBar/SearchBar.css';\r\nimport Pagination from 'react-js-pagination';\r\n\r\nconst apiKey = 'c01e341b9cd7af286fd2ad88c67a609e';\r\n\r\nconst SearchBar = ({ setMovieList }) => {\r\n  const [type, setType] = useState('popular');\r\n  const [page, setPage] = useState(1);\r\n  const [pageData, setPageData] = useState({});\r\n  let keyword = '';\r\n\r\n  const GetMovie = async () => {\r\n    let url = `https://api.themoviedb.org/3/movie/${type}?api_key=${apiKey}&language=en-US&page=${page}`;\r\n    let response = await fetch(url);\r\n    let data = await response.json();\r\n    setPageData(data);\r\n    setMovieList(data.results);\r\n  };\r\n\r\n  const getMovieByGenre = async (genreId) => {\r\n    genreId = document.getElementById('filterByGenre').value;\r\n    let url = `https://api.themoviedb.org/3/discover/movie?api_key=${apiKey}&language=en-US&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=${genreId}`;\r\n    let response = await fetch(url);\r\n    let data = await response.json();\r\n    setMovieList(data.results);\r\n  };\r\n\r\n  const searchByKeyword = async (keyword) => {\r\n    if (keyword === '' || keyword == null) {\r\n      return '';\r\n    }\r\n    let url = `https://api.themoviedb.org/3/search/movie?api_key=${apiKey}&query=${keyword}`;\r\n    let response = await fetch(url);\r\n    let data = await response.json();\r\n    setMovieList(data.results);\r\n  };\r\n\r\n  useEffect(() => {\r\n    GetMovie();\r\n  }, [type, page]);\r\n\r\n  const handleChangeType = (selectedType) => {\r\n    setType(selectedType);\r\n    setPage(1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"boxSelectBoard\">\r\n        <div id=\"selectBoard\">\r\n          <button\r\n            disabled={type === 'popular'}\r\n            className=\"selectBoardPopularBtn\"\r\n            onClick={() => handleChangeType('popular')}\r\n          >\r\n            Popular\r\n          </button>\r\n          <button\r\n            disabled={type === 'top_rated'}\r\n            className=\"\"\r\n            onClick={() => handleChangeType('top_rated')}\r\n          >\r\n            Top Rated\r\n          </button>\r\n          <button\r\n            disabled={type === 'now_playing'}\r\n            className=\"\"\r\n            onClick={() => handleChangeType('now_playing')}\r\n          >\r\n            Now Playing\r\n          </button>\r\n          <select\r\n            id=\"filterByGenre\"\r\n            onChange={() => {\r\n              getMovieByGenre();\r\n            }}\r\n            defaultValue=\"\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              Filter By Genre\r\n            </option>\r\n            <option value=\"28\">Action</option>\r\n            <option value=\"12\">Adventure</option>\r\n            <option value=\"16\">Animation</option>\r\n            <option value=\"35\">Comedy</option>\r\n            <option value=\"80\">Crime</option>\r\n            <option value=\"99\">Documentary</option>\r\n            <option value=\"18\">Drama</option>\r\n            <option value=\"10751\">Family</option>\r\n            <option value=\"14\">Fantasy</option>\r\n          </select>\r\n          <div className=\"searchSection\">\r\n            <input\r\n              onChange={(event) => (keyword = event.target.value)}\r\n              placeholder=\"Search movie\"\r\n              className=\"searchBtn\"\r\n            />\r\n            <button onClick={() => searchByKeyword(keyword)}>Search</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <ul>\r\n          <div className=\"boxSelectBoard pageNumber\">\r\n            <Pagination\r\n              activePage={pageData.page}\r\n              itemsCountPerPage={20}\r\n              totalItemsCount={pageData.total_results || 200}\r\n              pageRangeDisplayed={5}\r\n              onChange={(pageNum) => setPage(pageNum)}\r\n              itemClass=\"page-item\"\r\n              linkClass=\"page-link\"\r\n            />\r\n          </div>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\Components\\Banner\\Banner.js",["50"],"C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\Components\\Header\\Header.js",["51","52","53","54","55","56"],"C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\Components\\MovieCard\\MovieCard.js",["57"],"import React from 'react';\r\nimport '../MovieCard/MovieCard.css';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { PlayCircleOutlined, StarFilled, VideoCameraOutlined } from '@ant-design/icons';\r\nimport { Icon, InlineIcon } from '@iconify/react';\r\nimport infoCircleOutlined from '@iconify-icons/ant-design/info-circle-outlined';\r\n\r\nconst MovieCard = ({ movie, genreList }) => {\r\n  const history = useHistory();\r\n  const gotoTrailer = (index) => {\r\n    history.push(`/trailer/${index}`);\r\n  };\r\n\r\n  if (!movie) {\r\n    return (\r\n      <div style={{ textAlign: 'center', margin: '30px 0' }}>\r\n        <VideoCameraOutlined spin style={{ fontSize: '50px' }} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"flip-card\">\r\n      <div className=\"flip-card-inner\">\r\n        <div className=\"flip-card-front\">\r\n          <img\r\n            src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2/${movie.poster_path}`}\r\n            className=\"cardImage\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"flip-card-back\">\r\n          <div className=\"movieTitle\">{movie.title}</div>\r\n          <div className=\"rating\">\r\n            <StarFilled style={{ color: '#db7100' }} /> &nbsp;\r\n            <span style={{ height: '16px' }}>{movie.vote_average}</span>\r\n          </div>\r\n          <div className=\"genre\">\r\n            {movie &&\r\n              movie.genre_ids.length > 0 &&\r\n              movie.genre_ids.map((id, index) => {\r\n                return (\r\n                  <Badge key={`badge-${index}`} variant=\"light\" style={{ marginRight: '3px' }}>\r\n                    {genreList &&\r\n                      genreList.length > 0 &&\r\n                      genreList.find((item) => item.id === id).name}\r\n                  </Badge>\r\n                );\r\n              })}\r\n          </div>\r\n          <div className=\"movieDes\">{movie.overview}</div>\r\n          <div>\r\n            <a href={`https://www.themoviedb.org/movie/${movie.id}`} target=\"_\">\r\n              <Icon style={{ fontSize: '27px', color: 'black' }} icon={infoCircleOutlined} />\r\n            </a>\r\n            &nbsp;\r\n            <PlayCircleOutlined\r\n              style={{ fontSize: '25px' }}\r\n              onClick={() => {\r\n                gotoTrailer(movie.id);\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieCard;\r\n","C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\Components\\MovieCard\\Trailer.js",["58","59"],"C:\\Users\\minhtu1071\\Desktop\\reactjs\\New folder\\myproject\\src\\Components\\MovieList\\MovieList.js",[],{"ruleId":"60","severity":1,"message":"61","line":13,"column":14,"nodeType":"62","messageId":"63","endLine":13,"endColumn":21},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":41,"column":6,"nodeType":"70","endLine":41,"endColumn":18,"suggestions":"71"},{"ruleId":"72","severity":1,"message":"73","line":9,"column":3,"nodeType":"74","messageId":"75","endLine":11,"endColumn":4},{"ruleId":"72","severity":1,"message":"73","line":6,"column":3,"nodeType":"74","messageId":"75","endLine":8,"endColumn":4},{"ruleId":"76","severity":1,"message":"77","line":13,"column":11,"nodeType":"78","endLine":13,"endColumn":23},{"ruleId":"79","severity":1,"message":"80","line":14,"column":13,"nodeType":"78","endLine":14,"endColumn":60},{"ruleId":"76","severity":1,"message":"77","line":20,"column":15,"nodeType":"78","endLine":20,"endColumn":27},{"ruleId":"76","severity":1,"message":"77","line":25,"column":15,"nodeType":"78","endLine":25,"endColumn":27},{"ruleId":"76","severity":1,"message":"77","line":30,"column":15,"nodeType":"78","endLine":30,"endColumn":27},{"ruleId":"60","severity":1,"message":"81","line":6,"column":16,"nodeType":"62","messageId":"63","endLine":6,"endColumn":26},{"ruleId":"68","severity":1,"message":"82","line":24,"column":6,"nodeType":"70","endLine":24,"endColumn":8,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":29,"column":9,"nodeType":"78","endLine":32,"endColumn":11},"no-unused-vars","'setPage' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["86"],"no-negated-in-lhs",["87"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'GetMovie'. Either include it or remove the dependency array.","ArrayExpression",["88"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'InlineIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["89"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [type, page, GetMovie]",{"range":"94","text":"95"},"Update the dependencies array to be: [id]",{"range":"96","text":"97"},[1473,1485],"[type, page, GetMovie]",[715,717],"[id]"]